##The data raw is on the directory called "raw"
##Prerequisites to this module. Stacks ver.2.55 or superior (available on http://creskolab.uoregon.edu/stacks/)
##Whole analisis is on a master directory called "Process"
#!bin/bash
##Create a output directory for demultiplex data
mkdir ../Process/data/demultiplex

##To demultiplex data
##Barcodes text is in directory called "data", file .txt
stacks process_radtags -p ../Process/data/raw -o ../Process/data/demultiplex -b ../Process/data/GBS-PstI-1-96_barcodes.txt -e pstI --renz_1 pstI -r -c -q --inline_null -s 20 --filter_illumina --adapter_1  AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT
#!bin/bash

##Prerequisites to this module, TrimGalore ver.0.0.6 (available on https://github.com/FelixKrueger/TrimGalore)
##Make a directory for clean data
mkdir ../Process/data/clean_data

##To clean demultiplexed data with TrimGalore_0.6.6 in general aspects, as illumina adapter, cut first and end bases, length, and quality

TrimGalore-0.6.6/trim_galore --illumina -length 84 --clip_R1 5 --stringency 5 -q 34 --three_prime_clip_R1 2 --fastqc ../Process/data/demultiplex/*.fq.gz -o ../Process/data/data_clean
##Prerequisites on this module, software BWA Burrows-Wheeler Aligner ver.0.7.17 (available on https://sourceforge.net/projects/bio-bwa/files/)  or use the next command on console (on Linux)

# sudo apt update
# sudo apt install bwa

##To create a directory for the sequences of the genome reference of Vanilla (Whole genome) and index
mkdir ../Process/data/wgen

##Download th whole genome of vanilla in next link -> https://www.ncbi.nlm.nih.gov/assembly/GCA_016413895.1
##Whole genome is divide on chromosomes, download in fasta format all the visible range.

##Use the cat command to concatenate the sequences of the whole genome
##Before this step, rename the archives to better use and move the files to "wgen" directory
###Important note. Erase colon in all fasta files of reference genome!! This is important because the populations module on Stacks don't recognize the format with colon on header
cat ../Process/data/wgen/"c1.fa" "c2.fa" "c3.fa" "c4.fa" "c5.fa" "c6.fa" "c7.fa" "c8.fa" "c9.fa" "c10.fa" "c11.fa" "c12.fa" "c13.fa" "c14.fa" > wrefgen.fa

##Create the index with the genome reference (in format fasta)
##Opcional use flag -a is/bwtsw to inditcate the length in sequences (short or long respectively)
bwa index ../Process/data/wgen/wrefgen.fa ../Process/data/wgen/wrefgen

##Move archives .fq.gz to a new directory
mkdir ../Process/data/data_trimmed
cd ../Process/data/data_clean
mv *fq.gz ../Process/data/data_trimmed

##Create a directory for the alignment sequences
mkdir ../Process/data/wgen_aln


#####To use the package bwa-mem in just one sample
bwa mem -t 4 -p ../Process/data/wrefgen/wrefgen.fa ../Process/data/data_trimmed/***_trimmed.fq.gz > ~/Escritorio/Process/data/wgen_aln/name_archive.sam

##Built a loop for data trimmed to alignment in one comand

for alignment in `ls ../Process/data/data_trimmed/ | grep -oE "\w*" | uniq`; do 
bwa mem -t 4 -p ../Process/data/wgen/wrefgen.fa ../Process/data/data_trimmed/${alignment}.fq.gz > ../Process/data/wgen_aln/${alignment}.sam; 
done

##Erase incorrect output files if exist. Total of output archives -> 96


#####Prerequisites, install Picard-tools, available on https://broadinstitute.github.io/picard/
##Or use the next command line in console
#sudo apt update
#sudo apt install picard-tools

###To sort sequences on Picard-tools

#Make a new directory for bam files
mkdir ../Process/data/wgenbam

###Convert sam files from directory vanilla_aln into bam files, with Picard tools

#To convert sample by sample
PicardCommandLine SamFormatConverter I=../Process/data/wgen_aln/"name_archive.sam" O=../Process/data/wgenbam/"name_archive.bam"

#To convert all the samples .sam in one command. In the final test, verify the weight of the archives, to check the proportionality of the weight in each file
for wgbam in `ls ../Process/data/wgen_aln | grep -oE "\w*" | uniq`; do 
PicardCommandLine SamFormatConverter I=../Process/data/wgen_aln/${wgbam}.sam O=../Process/data/wgenbam/${wgbam}.bam
done

##For sort sequences with SortSam in Picard-Tools
##Make a new directory for data sorted
mkdir ../Process/data/wgsort

#To sort sample by sample
PicardCommandLine SortSam INPUT=../Process/data/wgenbam/"name_archieve.bam" OUTPUT=../Process/data/wgsort/name_archieve.bam SORT_ORDER=coordinate


#A loop to convert sort all files in one comand. In the final test, verify the weight of the archives, to check the proportionality of the weight in each file
for wgensort in `ls ../Process/data/wgenbam | grep -oE "\w*" | uniq`; do 
PicardCommandLine SortSam INPUT=../Process/data/wgenbam/${wgensort}.bam OUTPUT=../Process/data/wgsort/${wgensort}st.bam SORT_ORDER=coordinate;
done


##For add a readgroup to archieves bam

##New directory for readgroups
mkdir ../Process/data/wgroups
 
#To add readgroup sample by sample
PicardCommandLine AddOrReplaceReadGroups INPUT=../Process/data/wgsort/"name_archive.bam" OUTPUT=../Process/data/wgroups/name_archive.bam RGID=sample RGLB=single-end RGPL=Illumina RGPU=unknown RGSM=sample

#A loop to add readgroups in one command
for wadd in `ls ../Process/data/wgsort | grep -oE "\w*" | uniq`; do
PicardCommandLine AddOrReplaceReadGroups INPUT=../Process/data/wgsort/${wadd}.bam OUTPUT=../Process/data/wgroups/${wadd}g.bam RGID=sample RGLB=single-end RGPL=Illumina RGPU=unknown RGSM=sample;
done

####Prerequisites for this module, software samtools, available on http://www.htslib.org/
##Or use the next command line
# sudo apt update
# sudo apt install samtools

###To check the quality of alignment and mapping sequences

###In order not to create wrong directories, we will first create the directories of the quality reports process

#Make a directory for quality reports
mkdir ../Process/data/wgrep

#Make a directory for each archive to index quality report process
for dirq in `ls ../Process/data/wgroups | grep -oE "\w*" | uniq`; do
mkdir ../Process/data/wgrep/${dirq}
done
##Verify the existence of the directories

#Make an index on samtools
samtools faidx ../Process/data/wgen/"wrefgen.fa" --output ../Process/data/wrefgen.fa

#Index sample by sample
samtools index ../Process/data/wgroups/"***_trimmedstg.bam"

#A loop to index all samples
for wind in `ls ../Process/data/wgroups | grep -oE "\w*" | uniq`; do
samtools index ../Process/data/wgroups/${wind}.bam
done

#For a quality report with qualimap sample by sample
qualimap_v2.2.1/qualimap bamqc -bam ../Process/data/wgroups/"***_trimmedstg.bam" -nw 400 -hm 3 -outdir ../Process/data/wgrep

#Loop for all samples
for wrep in `ls ../Process/data/wgroups | grep -oE "\w*" | uniq`; do
qualimap_v2.2.1/qualimap bamqc -bam ../Process/data/wgroups/${wrep}.bam -nw 400 -hm 3 -outdir ../Process/data/wgrep/${wrep}
done


##Prerequisites, stacks ver.2.55 or superior.
##To generate loci and identify SNP's

##Make a directory for output archives
mkdir ../Process/data/gwens

##Identify the samples to generate a directory with the samples of contain just V. planifolia. The file with the information is in "1_Calidad_secuencias.xlsx"
##Move or copy the archives to the new directory (pop_origin), this process need to do sample by sample (total = 80 archives)
mkdir ../Process/data/pop_origin

##Create a population map, identifying each sample if are wild or cultivated. To do this map, write in a text file (on editor text) <name_sample><tab><population> and
##save as a -.tsv file. More information on https://catchenlab.life.illinois.edu/stacks/manual/#popmap

##To generate loci and identify SNP's
stacks gstacks -I ../Process/data/pop_origin -O ../Process/data/gwens -M ../Process/data/"archive_popmap.tsv"
####For analysis population in the last output files with stacks
##Prerequisites, Stacks populations module
##Make a module for output
mkdir ../Process/data/popf

##To do analysis on the last output of gstacks (sixth module)
##The outputs on this analysis was determined for software 'STRUCTURE', 'GENEPOP', 'Phylip' and 'VCFtools'
stacks populations -P ../Process/data/gwens -O ../Process/data/popf -M ../Process/data/"popmap_orig.tsv" --min-samples-per-pop 0.01 --min-samples-overall 0.01 --min-population 1 --hwe --fstats --ordered-export --fasta-loci --fasta-samples --vcf --phylip --structure
